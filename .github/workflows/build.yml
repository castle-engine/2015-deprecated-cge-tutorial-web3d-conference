# ----------------------------------------------------------------------------
# GitHub Actions workflow to build this application.
# Using latest Castle Game Engine ( https://castle-engine.io/ ) snapshot.
# For multiple platforms (Linux, Windows, macOS, Android).
#
# This uses GitHub-hosted runners, that is: you don't need to set up any server
# infrastructure, GitHub provides it all for free for open-source projects.
#
# See docs:
# - https://castle-engine.io/github_actions
# - https://docs.github.com/en/actions
# ----------------------------------------------------------------------------

name: Build

on:
  pull_request:
  # Run on push to any branch, not on tags.
  # Checking tags is not useful for us (we check the commit when it happened
  # at branch) and we would waste 2x time to update on every "snapshpt" tag change.
  push:
    branches:
      - '**'

jobs:
  # Build for platforms supported by
  # CGE Docker image https://hub.docker.com/r/kambi/castle-engine-cloud-builds-tools/ .
  #
  # Since setting up Docker image takes majority of time (5-6 mins)
  # compared to actually getting and compiling CGE (1 min)
  # and building application (~1 min for each platform),
  # we build all platforms possible within one job.
  build-using-docker:
    name: Build Using Docker
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v4
      # Set env CASTLE_ENGINE_PATH following
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
      # https://brandur.org/fragments/github-actions-env-vars-in-env-vars
      - name: Castle Game Engine - Env CASTLE_ENGINE_PATH
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE/castle-engine" >> $GITHUB_ENV
      - name: Castle Game Engine - Env PATH (non-Windows)
        run: echo "PATH=$PATH:$CASTLE_ENGINE_PATH/tools/build-tool/" >> $GITHUB_ENV
      - name: Castle Game Engine - Clone snapshot
        run: git clone --depth 1 --single-branch --branch snapshot https://github.com/castle-engine/castle-engine/
      - name: Castle Game Engine - Build
        run: cd $CASTLE_ENGINE_PATH/tools/build-tool/ && ./castle-engine_compile.sh

      - name: Package Windows (2d_game)
        run: cd 2d_game && castle-engine package --os=win64 --cpu=x86_64 --verbose
      - name: Archive Artifacts
        # See https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-2d_game
          # Note: Keep paths that start with asterisk in double qoutes, to avoid misinterpreting as YAML reference.
          # See https://stackoverflow.com/questions/19109912/yaml-do-i-need-quotes-for-strings-in-yaml
          # https://yamlchecker.com/
          path: "2d_game/*-win64-x86_64.zip"
          if-no-files-found: error

      - name: Package Linux (2d_game)
        run: cd 2d_game && castle-engine package --os=linux --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-2d_game
          path: "2d_game/*-linux-x86_64.tar.gz"
          if-no-files-found: error

      - name: Package Windows (2d_game_android_and_desktop)
        run: cd 2d_game_android_and_desktop && castle-engine package --os=win64 --cpu=x86_64 --verbose
      - name: Archive Artifacts
        # See https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-2d_game_android_and_desktop
          # Note: Keep paths that start with asterisk in double qoutes, to avoid misinterpreting as YAML reference.
          # See https://stackoverflow.com/questions/19109912/yaml-do-i-need-quotes-for-strings-in-yaml
          # https://yamlchecker.com/
          path: "2d_game_android_and_desktop/*-win64-x86_64.zip"
          if-no-files-found: error

      - name: Package Linux (2d_game_android_and_desktop)
        run: cd 2d_game_android_and_desktop && castle-engine package --os=linux --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-2d_game_android_and_desktop
          path: "2d_game_android_and_desktop/*-linux-x86_64.tar.gz"
          if-no-files-found: error

      - name: Package Android (2d_game_android_and_desktop)
        run: cd 2d_game_android_and_desktop && castle-engine package --target=android --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build-2d_game_android_and_desktop
          path: "2d_game_android_and_desktop/*.apk"
          if-no-files-found: error

      - name: Package Windows (first_3d_application)
        run: cd first_3d_application && castle-engine package --os=win64 --cpu=x86_64 --verbose
      - name: Archive Artifacts
        # See https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-first_3d_application
          # Note: Keep paths that start with asterisk in double qoutes, to avoid misinterpreting as YAML reference.
          # See https://stackoverflow.com/questions/19109912/yaml-do-i-need-quotes-for-strings-in-yaml
          # https://yamlchecker.com/
          path: "first_3d_application/*-win64-x86_64.zip"
          if-no-files-found: error

      - name: Package Linux (first_3d_application)
        run: cd first_3d_application && castle-engine package --os=linux --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-first_3d_application
          path: "first_3d_application/*-linux-x86_64.tar.gz"
          if-no-files-found: error

      - name: Package Windows (fps_game)
        run: cd fps_game && castle-engine package --os=win64 --cpu=x86_64 --verbose
      - name: Archive Artifacts
        # See https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-fps_game
          # Note: Keep paths that start with asterisk in double qoutes, to avoid misinterpreting as YAML reference.
          # See https://stackoverflow.com/questions/19109912/yaml-do-i-need-quotes-for-strings-in-yaml
          # https://yamlchecker.com/
          path: "fps_game/*-win64-x86_64.zip"
          if-no-files-found: error

      - name: Package Linux (fps_game)
        run: cd fps_game && castle-engine package --os=linux --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-fps_game
          path: "fps_game/*-linux-x86_64.tar.gz"
          if-no-files-found: error

  # Build for platforms supported from macOS.
  # This means to build for macOS and (maybe in the future) iOS.
  build-macos:
    name: Build Using macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install FPC+Lazarus
        uses: gcarreno/setup-lazarus@v3.2.17
        with:
          lazarus-version: stable
      - name: Castle Game Engine - Env CASTLE_ENGINE_PATH
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE/castle-engine" >> $GITHUB_ENV
      - name: Castle Game Engine - Env PATH (non-Windows)
        run: echo "PATH=$PATH:$CASTLE_ENGINE_PATH/tools/build-tool/" >> $GITHUB_ENV
      - name: Castle Game Engine - Clone snapshot
        run: git clone --depth 1 --single-branch --branch snapshot https://github.com/castle-engine/castle-engine/
      - name: Castle Game Engine - Build
        run: cd $CASTLE_ENGINE_PATH/tools/build-tool/ && ./castle-engine_compile.sh

      - name: Package macOS (2d_game)
        run: cd 2d_game && castle-engine package --os=darwin --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-2d_game
          path: "2d_game/*-darwin-x86_64.zip"
          if-no-files-found: error
      - name: Package macOS (2d_game_android_and_desktop)
        run: cd 2d_game_android_and_desktop && castle-engine package --os=darwin --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-2d_game_android_and_desktop
          path: "2d_game_android_and_desktop/*-darwin-x86_64.zip"
          if-no-files-found: error
      - name: Package macOS (first_3d_application)
        run: cd first_3d_application && castle-engine package --os=darwin --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-first_3d_application
          path: "first_3d_application/*-darwin-x86_64.zip"
          if-no-files-found: error
      - name: Package macOS (fps_game)
        run: cd fps_game && castle-engine package --os=darwin --cpu=x86_64 --verbose
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-fps_game
          path: "fps_game/*-darwin-x86_64.zip"
          if-no-files-found: error


  release:
    name: Release
    runs-on: ubuntu-latest
    # Only upload release if all builds, on all runners, succeeded.
    needs: [build-using-docker, build-macos]
    steps:
    - name: Download packaged releases
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
    - name: List downloaded files
      run: ls -R
    - name: GH CLI status
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh auth status
    # Releases files in the "snapshot" release.
    - name: Release Artifacts
      if: ${{ github.ref == 'refs/heads/master' }}
      run: gh release --repo ${{ github.repository }} upload snapshot --clobber *.zip *.tar.gz *.apk
      env:
        GH_TOKEN: ${{ github.token }}

  update-release-tag:
    name: Update Release Tag (make snapshot tag point to the build commit on master branch)
    runs-on: ubuntu-latest
    needs: [release]
    steps:
    - uses: actions/checkout@v4
    - name: Update Release Tag
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        # --force allows to overwrite previous tag
        git tag --force snapshot
        # --force allows to push with overwritten tag
        git push --force origin snapshot
